# syntax=docker/dockerfile:1

############################################
# Stage 1: Builder on Amazon Linux 2 + Go  #
############################################
FROM amazonlinux:2 as builder

ARG GO_VERSION=1.24.1

# Install required build tools on AL2 (uses yum)
RUN yum update -y && \
    yum install -y gcc git curl tar gzip sqlite-devel && \
    yum clean all

# Download & install Go (1.24.1)
RUN curl -OL "https://go.dev/dl/go${GO_VERSION}.linux-amd64.tar.gz" && \
    tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz" && \
    rm "go${GO_VERSION}.linux-amd64.tar.gz"

ENV PATH="/usr/local/go/bin:${PATH}"
ENV CGO_ENABLED=1
ENV GOOS=linux
ENV GOARCH=amd64

WORKDIR /app

# Copy in dependencies first
COPY go.mod go.sum ./
RUN go mod download

# Copy remaining source
COPY . .

# Build Go binary (CGO-enabled)
RUN go build -ldflags="-s -w" -o techdetector-linux-amd64

#####################################################
# Stage 2: Final Image on Lambda AL2023 (uses dnf)  #
#####################################################
FROM public.ecr.aws/lambda/provided:al2023

# AL2023 uses dnf
RUN dnf upgrade -y && \
    dnf install -y sqlite && \
    dnf clean all

# Copy compiled binary from builder
COPY --from=builder /app/techdetector-linux-amd64 ./techdetector
RUN chmod +x ./techdetector

# (Optional) copy config
COPY queries.yaml /var/task/queries.yaml

# AL2023 doesn't require a dummy handler name, just set ENTRYPOINT
ENTRYPOINT ["./techdetector"]
