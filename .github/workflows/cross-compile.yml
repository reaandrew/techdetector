name: CI - Build Binary and Push Docker Image to AWS ECR

permissions:
  contents: read
  id-token: write  # Required for AWS OIDC authentication

env:
  AWS_REGION: eu-west-2
  IMAGE_NAME: techdetector-lambda
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # e.g., v1.0.0

jobs:
  build:
    name: Test / Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.0'

      - name: Run Go Tests
        run: |
          go test -race -covermode=atomic -coverprofile=coverage.out

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build-and-push:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/techdetector-ci
          role-session-name: GitHub_AWS_ECR
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure ECR Repository Exists
        run: |
          aws ecr describe-repositories --repository-name ${{ env.IMAGE_NAME }} --region ${{ env.AWS_REGION }} || \
          aws ecr create-repository --repository-name ${{ env.IMAGE_NAME }} --region ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Determine tag type
        id: determine-tag
        run: |
          if [[ "${{ github.ref }}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "TAG_TYPE=${{ github.ref_name }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == refs/heads/main ]]; then
            echo "TAG_TYPE=latest" >> $GITHUB_ENV
          else
            echo "TAG_TYPE=none" >> $GITHUB_ENV
          fi

      - name: Build and push Docker image to ECR
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.lambda
          push: true
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_TYPE }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.version=${{ github.ref_name }}
